package at.itb13.oculus.presentation;

import java.io.IOException;
import java.net.URL;
import java.util.ResourceBundle;

import com.sun.org.apache.bcel.internal.generic.GETSTATIC;

import at.itb13.oculus.lang.LangFacade;
import at.itb13.oculus.model.Patient;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;
import javafx.scene.Node;
import javafx.scene.Scene;
import javafx.scene.control.MenuItem;
import javafx.scene.control.SplitPane;
import javafx.scene.input.MouseEvent;
import javafx.scene.layout.Pane;
import javafx.scene.layout.StackPane;
import javafx.scene.layout.VBox;
import javafx.stage.Stage;

public class PatientMainViewController implements Initializable  {


	public static final String QUEUEVIEW = "QueueView.fxml";
	public static final String PATIENTTABVIEW = "PatientTabView.fxml";
	public static final String APPOINTEMENTTABVIEW = "AppointmentTabView.fxml";
	
	@FXML
	private MenuItem _closeItem;
	@FXML
	private MenuItem _deleteItem;
	@FXML
	private MenuItem _aboutItem;
	@FXML
	private Pane _patientPaneController;
	@FXML
	private Pane _queuePaneController;
	@FXML
	private Pane _appointmentPaneController;
	private LangFacade _facade;
	@FXML
	private QueueViewController _queueViewController;
	@FXML
	private PatientTabViewController _patientTabViewController;
	@FXML
	private AppointmentTabViewController _appointmentTabViewController;
	@FXML
	private SplitPane _splitPane;
	@FXML
	private VBox _vBox;
	@Override
	public void initialize(URL arg0, ResourceBundle arg1) {
		_facade = LangFacade.getInstance();
		
		FXMLLoader queuePaneLoader = null;		
		FXMLLoader patientPaneLoader = null;
		_queueViewController = new QueueViewController();
		_patientTabViewController = new PatientTabViewController();
		try {
			queuePaneLoader = new FXMLLoader(this.getClass().getResource(QUEUEVIEW), _facade.getResourceBundle());
			patientPaneLoader = new FXMLLoader(this.getClass().getResource(PATIENTTABVIEW), _facade.getResourceBundle());
			queuePaneLoader.setController(_queueViewController);
			patientPaneLoader.setController(_patientTabViewController);
			_queuePaneController = (Pane) queuePaneLoader.load();
			_patientPaneController = (Pane) patientPaneLoader.load();
		} catch (IOException ex) {
			ex.printStackTrace();
		}
		_splitPane.getItems().set(1, _patientPaneController);
		_vBox.getChildren().set(1, _queuePaneController);
		
		_queueViewController.init(this);
		_patientTabViewController.init(this);
	}
	
	// Event Listener on MenuItem[#_closeItem].onAction
	@FXML
	public void closeApplication(ActionEvent event) {
		
	}
	// Event Listener on MenuItem[#_aboutItem].onAction
	@FXML
	public void openAboutDialog(ActionEvent event) {
		// TODO Autogenerated
	}
	@FXML
	public void openTreatmentView(ActionEvent event) {
		if(_appointmentPaneController == null){
			try {
				_appointmentTabViewController = new AppointmentTabViewController();
				FXMLLoader appointmentPaneLoader = null;
				appointmentPaneLoader = new FXMLLoader(this.getClass().getResource(APPOINTEMENTTABVIEW), _facade.getResourceBundle());
				appointmentPaneLoader.setController(_appointmentTabViewController);
				_appointmentPaneController = (Pane) appointmentPaneLoader.load();
			} catch (IOException ex) {
				ex.printStackTrace();
			}
		}
		if(!_splitPane.getItems().contains(_appointmentPaneController)){
			_splitPane.getItems().set(1, _appointmentPaneController);
			System.out.println("change");
		}
	}
	// Event Listener on ImageView[#_calendarButton].onDragDetected
	@FXML
	public void openCalendarView(MouseEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on Button[#_patientView].onAction
	@FXML
	public void openPatientView(ActionEvent event) {
		if(!_splitPane.getItems().contains(_patientPaneController)){
			_splitPane.getItems().set(1, _patientPaneController);
			System.out.println("change");
		}
	}
	
	public void setNewTab(String id){
		_patientTabViewController.createFormular(id);
	}
}
